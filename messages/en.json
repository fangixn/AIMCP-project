{
  "common": {
    "language": "Language",
    "english": "English",
    "chinese": "Chinese",
    "menu": "Menu",
    "close": "Close"
  },
  "navigation": {
    "features": "Features",
    "playground": "Playground",
    "docs": "Documentation",
    "resources": "Resources", 
    "servers": "MCP Servers",
    "blog": "Blog",
    "faq": "FAQ"
  },
  "hero": {
    "title": "Making AI Context Understanding Possible",
    "subtitle": "Empowering AI applications to enter the MCP standard era, enabling true collaboration between context, protocols, and models",
    "tryPlayground": "Try Playground",
    "readDocs": "Read Documentation"
  },
  "features": {
    "title": "Core MCP Capabilities",
    "subtitle": "Discover the three foundational pillars that make MCP the future of AI context management",
    "contextStandardization": {
      "title": "Context Standardization",
      "description": "Establish unified context protocols that enable seamless communication between different AI models and applications, ensuring consistent understanding across platforms."
    },
    "multiModelCollaboration": {
      "title": "Multi-Model Collaboration", 
      "description": "Enable dynamic collaboration between multiple AI models through standardized interfaces, allowing complex tasks to be distributed across specialized model capabilities."
    },
    "serverArchitecture": {
      "title": "Server Architecture",
      "description": "Deploy scalable MCP servers that manage context, handle protocol communications, and orchestrate AI model interactions with enterprise-grade reliability."
    }
  },
  "playground": {
    "title": "MCP Resource Collection Tool",
    "subtitle": "Intelligently search and collect MCP-related resources, generating detailed analysis reports",
    "documentUpload": {
      "title": "Document Upload",
      "description": "Upload and process various document formats to establish rich context for AI models"
    },
    "contextConfiguration": {
      "title": "Context Configuration", 
      "description": "Set up and manage context parameters to optimize AI model performance and understanding"
    },
    "modelSelection": {
      "title": "Model Selection",
      "description": "Choose from multiple AI models and configure collaboration patterns for complex tasks"
    },
    "launchPlayground": "Launch Playground",
    "collector": {
      "tabs": {
        "collector": "Resource Collector",
        "results": "Collection Results",
        "stats": "Analytics",
        "favorites": "My Favorites"
      },
      "keywords": {
        "label": "Search Keywords (comma separated)",
        "placeholder": "Enter custom keywords, leave empty to use defaults"
      },
      "options": {
        "label": "Collection Options",
        "includeGithub": "Include GitHub Project Search"
      },
      "buttons": {
        "startCollection": "Start Collection",
        "collecting": "Collecting...",
        "viewDetailedReport": "View Detailed Report",
        "exportJson": "Export JSON",
        "exportCsv": "Export CSV"
      },
      "progress": {
        "step": "Step",
        "collected": "Collected",
        "resources": "resources",
        "current": "Current"
      },
      "success": {
        "title": "Collection Complete!",
        "message": "Found {count} MCP resources, please check the collection results below."
      },
      "bestPractices": {
        "title": "MCP Agent Best Practices & Learning Path",
        "learningPath": {
          "title": "üìö Recommended Learning Path",
          "beginner": {
            "title": "Understanding Basics",
            "duration": "Estimated 3-5 days",
            "subtitle": "MCP Quick Start",
            "step1": "Day 1: Read official documentation basics",
            "step2": "Day 2: Install Python SDK and run first example",
            "step3": "Day 3: Configure Claude Desktop integration",
            "step4": "Day 4-5: Try filesystem server"
          },
          "intermediate": {
            "title": "Hands-on Practice",
            "duration": "Estimated 1-2 weeks",
            "subtitle": "Custom Server Development",
            "step1": "Week 1: Deep dive into MCP protocol specification",
            "step2": "Study multiple server implementation cases",
            "step3": "Week 2: Develop your first custom server",
            "step4": "Integrate external APIs and databases"
          },
          "advanced": {
            "title": "Building Applications",
            "duration": "Continuous learning",
            "subtitle": "Ecosystem Contribution",
            "step1": "Build enterprise-grade MCP solutions",
            "step2": "Contribute code to open source community",
            "step3": "Write tutorials and best practice documentation",
            "step4": "Participate in protocol standard development"
          }
        },
        "useCases": {
          "title": "üõ†Ô∏è Real-world Use Cases",
          "fileManager": {
            "title": "File Management Assistant",
            "description": "Use filesystem server to let Claude help you manage local files",
            "tags": {
              "beginner": "Beginner Friendly",
              "official": "Official Example"
            }
          },
          "codeAnalysis": {
            "title": "Code Repository Analysis",
            "description": "Connect Git repositories for Claude to analyze code structure and history",
            "tags": {
              "intermediate": "Intermediate",
              "devTool": "Development Tool"
            }
          },
          "dbHelper": {
            "title": "Database Query Assistant",
            "description": "Connect PostgreSQL to have Claude help you write complex SQL queries",
            "tags": {
              "advanced": "Advanced",
              "dataAnalysis": "Data Analysis"
            }
          },
          "apiHub": {
            "title": "API Integration Hub",
            "description": "Create unified interface for Claude to access multiple third-party APIs",
            "tags": {
              "enterprise": "Enterprise",
              "integration": "Integration Solution"
            }
          }
        },
        "tips": {
          "title": "üí° Development Tips & Considerations",
          "bestPractices": {
            "title": "Best Practices",
            "tip1": "Always validate input parameter validity",
            "tip2": "Provide clear error messages and logging",
            "tip3": "Use type hints to improve code quality",
            "tip4": "Implement proper permissions and security checks",
            "tip5": "Write unit tests covering core functionality",
            "tip6": "Follow official naming and structure conventions"
          },
          "pitfalls": {
            "title": "Common Pitfalls",
            "tip1": "Don't store sensitive information in servers",
            "tip2": "Avoid blocking operations that affect response performance",
            "tip3": "Pay attention to large file handling and memory usage",
            "tip4": "Ensure cross-platform compatibility",
            "tip5": "Don't ignore version compatibility issues",
            "tip6": "Avoid overly complex nested structures"
          }
        },
        "priorityResources": {
          "title": "üåü Priority Learning Resources",
          "officialDocs": {
            "title": "Official Documentation",
            "description": "Authoritative, comprehensive, timely updates"
          },
          "pythonSdk": {
            "title": "Python SDK",
            "description": "Most mature development tool"
          },
          "fileSystemExample": {
            "title": "Filesystem Example",
            "description": "Best starting point"
          }
        }
      },
      "faq": {
        "title": "MCP Agent FAQ",
        "questions": {
          "whatIsMcp": {
            "question": "What is Model Context Protocol (MCP)?",
            "answer": "MCP is an open protocol developed by Anthropic that allows AI assistants to securely access external data and tools. It establishes standardized connection methods, enabling AI like Claude to interact with various services and data sources."
          },
          "skillsRequired": {
            "question": "What skills do I need to start using MCP?",
            "answer": "Basic usage only requires software installation and documentation reading skills. For custom server development, basic Python or TypeScript knowledge is recommended. Most tutorials provide detailed step-by-step instructions."
          },
          "systemRequirements": {
            "question": "What environment do MCP servers need to run?",
            "answer": "Most MCP servers can run locally, supporting Windows, macOS, and Linux. Python servers require Python 3.10+, TypeScript servers require Node.js 18+."
          },
          "claudeIntegration": {
            "question": "How to integrate with Claude Desktop?",
            "answer": "You need to modify Claude Desktop's configuration file to add MCP server information. Specific paths: Windows at %APPDATA%/Claude/, macOS at ~/Library/Application Support/Claude/."
          },
          "security": {
            "question": "Is MCP secure? Will it leak data?",
            "answer": "MCP is designed with strict permission control mechanisms. Servers can only access explicitly authorized resources, and AI cannot directly execute system commands. However, it's still recommended not to expose sensitive data in production environments."
          },
          "troubleshooting": {
            "question": "How to troubleshoot when encountering problems?",
            "answer": "First check server logs and Claude Desktop connection status. Most issues are caused by configuration errors or missing dependencies. GitHub Issues and community forums have many solutions."
          }
        },
        "quickLinks": {
          "title": "üîó Quick Links",
          "quickStart": "Official Quick Start",
          "serverExamples": "Official Server Examples",
          "pythonSdk": "Python SDK",
          "typescriptSdk": "TypeScript SDK"
        }
      },
      "results": {
        "noResults": {
          "title": "No collection results yet, please start collecting first",
          "subtitle": "No resources match the filter criteria"
        },
        "filterAll": "All",
        "priority": {
          "high": "High",
          "medium": "Medium", 
          "low": "Low",
          "label": "Priority"
        },
        "rating": "Rating"
      },
      "stats": {
        "learningAdvice": {
          "title": "Learning Recommendations Based on Collection Results",
          "insights": {
            "title": "üìä Data Insights",
            "totalResources": "Collected {count} related resources",
            "typesCount": "Covering {count} different types",
            "languagesCount": "Supporting {count} languages",
            "sourcesCount": "From {count} different sources"
          },
          "recommendations": {
            "title": "üéØ Learning Focus",
            "documentation": "Prioritize reading {count} official documents",
            "tutorial": "Follow {count} tutorials for practice",
            "tool": "Try using {count} development tools",
            "example": "Study {count} practical examples"
          }
        },
        "personalizedPlan": {
          "title": "AI-Generated Personalized Learning Plan",
          "beginnerPath": "Beginner Path",
          "intermediatePath": "Intermediate Path",
          "expertPath": "Expert Path"
        },
        "toolbox": {
          "title": "Developer Utility Toolbox",
          "codeGenerator": {
            "title": "Code Generator",
            "description": "Quickly generate MCP server skeleton code based on templates"
          },
          "debugHelper": {
            "title": "Debug Assistant",
            "description": "Real-time monitoring of MCP connection status and message flow"
          },
          "configManager": {
            "title": "Configuration Manager",
            "description": "Unified management of multiple MCP server configurations"
          },
          "deployTool": {
            "title": "Deployment Tool",
            "description": "One-click deployment to Docker, cloud services, and other platforms"
          }
        },
        "distribution": {
          "byType": "By Type",
          "bySource": "By Source",
          "byLanguage": "By Language",
          "topTags": "Top Tags"
        }
      },
      "favorites": {
        "noFavorites": {
          "title": "No favorite resources yet",
          "subtitle": "Click the ‚≠ê button in collection results to favorite resources you like",
          "startCollecting": "Start Collecting Resources"
        },
        "stats": {
          "title": "My Favorite Resource Library",
          "total": "Total Favorites",
          "types": "Resource Types",
          "sources": "Resource Sources",
          "avgRating": "Average Rating"
        },
        "toggleFavorite": "Favorite",
        "removeFavorite": "Remove Favorite"
      }
    }
  },
  "documentation": {
    "title": "Technical Documentation",
    "subtitle": "Comprehensive guides covering MCP protocol structure, server architecture, and API implementation details",
    "quickStart": {
      "title": "Quick Start Guide",
      "description": "Get started with MCP in minutes with our step-by-step guide"
    },
    "protocolSpec": {
      "title": "Protocol Specification",
      "description": "Complete MCP protocol documentation and standards"
    },
    "serverDevelopment": {
      "title": "Server Development",
      "description": "Build and deploy your own MCP servers"
    },
    "apiReference": {
      "title": "API Reference",
      "description": "Detailed API documentation for all MCP endpoints"
    },
    "examples": {
      "title": "Code Examples",
      "description": "Real-world examples and implementation patterns"
    },
    "bestPractices": {
      "title": "Best Practices",
      "description": "Expert recommendations for MCP implementation"
    }
  },
  "resources": {
    "title": "MCP Resources",
    "subtitle": "Comprehensive collection of resources to learn and implement Model Context Protocol",
    "officialDocs": {
      "title": "Official Documentation",
      "description": "Authoritative resources from the MCP community"
    },
    "platformGuides": {
      "title": "Platform Guides", 
      "description": "Implementation guides for major AI platforms"
    },
    "communityResources": {
      "title": "Community Resources",
      "description": "Tutorials, articles, and discussions from the community"
    },
    "viewResource": "View Resource",
    "externalLink": "External Link"
  },
  "servers": {
    "title": "MCP Servers",
    "subtitle": "Discover and explore available MCP servers and their capabilities",
    "serverDirectory": {
      "title": "Server Directory", 
      "description": "Browse the comprehensive directory of MCP servers"
    },
    "communityServers": {
      "title": "Community Servers",
      "description": "Servers built and maintained by the community"
    },
    "discussions": {
      "title": "Community Discussions",
      "description": "Join conversations about MCP implementation and usage"
    },
    "exploreServers": "Explore Servers"
  },
  "footer": {
    "description": "Making AI context understanding possible through standardized protocols and collaborative architectures.",
    "quickLinks": "Quick Links",
    "resources": "Resources", 
    "community": "Community",
    "copyright": "¬© 2025 AIMCP. All rights reserved."
  },
  "docs": {
    "title": "Technical Documentation",
    "subtitle": "Complete technical guide for AIMCP project",
    "navigation": "Documentation Navigation",
    "gettingStarted": {
      "title": "Getting Started",
      "subtitle": "Follow these steps to quickly set up and run the AIMCP project",
      "systemRequirements": "System Requirements",
      "installationSteps": "Installation Steps",
      "step1": "1. Clone the repository:",
      "step2": "2. Install dependencies:",
      "step3": "3. Start development server:",
      "step4": "4. Open in browser:",
      "requirements": {
        "nodejs": "Node.js 18.0 or higher",
        "npm": "npm or yarn package manager",
        "git": "Git version control",
        "browser": "Modern browser (Chrome, Firefox, Safari, Edge)"
      }
    },
    "architecture": {
      "title": "Project Architecture",
      "subtitle": "Understand the technical architecture and component design of AIMCP project",
      "techStack": "Tech Stack",
      "directoryStructure": "Directory Structure",
      "frontend": "Frontend Framework",
      "uiComponents": "UI Components",
      "i18n": "Internationalization",
      "devTools": "Development Tools",
      "i18nSupport": "Bilingual Support",
      "dynamicRoutes": "Dynamic Routes"
    },
    "api": {
      "title": "API Documentation",
      "subtitle": "Detailed API interface descriptions and usage examples",
      "mcpCollectApi": "MCP Resource Collection API",
      "progressApi": "Progress Query API",
      "startCollection": "Start MCP resource collection task",
      "queryProgress": "Query collection task progress",
      "requestParams": "Request Parameters:",
      "responseExample": "Response Example:",
      "queryParams": "Query Parameters:",
      "taskStarted": "Collection task started",
      "estimatedTime": "2-5 minutes",
      "currentStep": "Collecting GitHub resources...",
      "resourcesFound": "resources found",
      "timeRemaining": "1 minute"
    },
    "components": {
      "title": "Component Documentation",
      "subtitle": "Usage guide for main React components in the project",
      "mcpCollectorTool": "Main component for MCP resource collection tool",
      "languageSwitcher": "Language switching component",
      "features": "Features:",
      "supportedLanguages": "Supported Languages:",
      "usageExample": "Usage Example:",
      "featuresList": {
        "customKeywords": "Custom search keywords",
        "realTimeProgress": "Real-time progress display",
        "resourceFiltering": "Resource classification and filtering",
        "dataVisualization": "Statistical data visualization",
        "exportFormats": "Export JSON/CSV formats"
      }
    },
    "deployment": {
      "title": "Deployment Guide",
      "subtitle": "How to deploy the project to production environment",
      "vercelDeployment": "Vercel Deployment (Recommended)",
      "netlifyDeployment": "Netlify Deployment",
      "dockerDeployment": "Docker Deployment",
      "vercelDescription": "Vercel is the native deployment platform for Next.js, providing the best performance and experience.",
      "netlifyDescription": "Netlify also provides excellent static website hosting services.",
      "dockerDescription": "Deploy using Docker containerization.",
      "steps": "Steps:",
      "buildSettings": "Build Settings:",
      "dockerfile": "Dockerfile:",
      "buildAndRun": "Build and Run:",
      "cliDeployment": "CLI Deployment:",
      "deploymentSteps": {
        "pushToGithub": "1. Push code to GitHub repository",
        "importProject": "2. Import project in Vercel",
        "configureEnv": "3. Configure environment variables (if needed)",
        "deploy": "4. Click deploy"
      }
    },
    "configuration": {
      "title": "Configuration Guide",
      "subtitle": "Description of various configuration files and options in the project",
      "i18nConfig": "Internationalization Configuration",
      "nextjsConfig": "Next.js Configuration",
      "tailwindConfig": "Tailwind CSS Configuration",
      "configFile": "Configuration File:",
      "addNewLanguage": "Adding New Language:",
      "languageSteps": {
        "step1": "1. Add new language file in messages/ directory",
        "step2": "2. Update locales array in middleware.ts",
        "step3": "3. Add new option in LanguageSwitcher component"
      }
    }
  }
} 